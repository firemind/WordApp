/*
 * File: app/view/MyTabPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('WordApp.view.MyTabPanel', {
    extend: 'Ext.tab.Panel',

    config: {
        layout: {
            animation: 'slide',
            type: 'card'
        },
        items: [
            {
                xtype: 'list',
                title: 'Words',
                iconCls: 'home',
                id: 'WordList',
                itemId: 'mylist',
                layout: {
                    type: 'fit'
                },
                itemTpl: [
                    '<div>{name}</div>'
                ],
                store: 'offlineSyncStore',
                items: [
                    {
                        xtype: 'toolbar',
                        docked: 'bottom',
                        items: [
                            {
                                xtype: 'button',
                                flex: 1,
                                itemId: 'AddButton',
                                ui: 'confirm',
                                iconCls: 'add',
                                iconMask: true,
                                text: 'Add'
                            },
                            {
                                xtype: 'button',
                                flex: 1,
                                itemId: 'editButton',
                                iconCls: 'compose',
                                iconMask: true,
                                text: 'Edit'
                            },
                            {
                                xtype: 'button',
                                flex: 1,
                                itemId: 'deleteButton',
                                ui: 'decline',
                                iconCls: 'delete',
                                iconMask: true,
                                text: 'Delete'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'formpanel',
                title: 'Quotes',
                iconCls: 'team',
                id: 'quotePanel',
                layout: {
                    type: 'fit'
                },
                scrollable: false,
                items: [
                    {
                        xtype: 'searchfield',
                        docked: 'top',
                        itemId: 'mysearchfield',
                        label: 'Search'
                    },
                    {
                        xtype: 'list',
                        id: 'QuoteList',
                        itemId: 'mylist2',
                        layout: {
                            type: 'fit'
                        },
                        itemTpl: [
                            '<div>{text} -<b>{who}</b></div>'
                        ],
                        store: 'quoteSyncStore'
                    }
                ]
            },
            {
                xtype: 'formpanel',
                title: 'Settings',
                iconCls: 'settings',
                items: [
                    {
                        xtype: 'button',
                        handler: function(button, event) {
                            Ext.Viewport.setMasked({
                                xtype: 'loadmask',
                                message: 'Loading...'
                            });

                            Ext.getStore('offlineSyncStore').loadServer(function(s){
                                WordApp.app.getController('MyController').getWordListButton().setBadgeText(s.length);
                            });
                            Ext.getStore('quoteSyncStore').loadServer(function(s){
                                Ext.Viewport.setMasked(false);
                                WordApp.app.getController('MyController').getQuoteListButton().setBadgeText(s.length);
                            });
                        },
                        text: 'LoadServer'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onWordListItemSwipe',
                event: 'itemswipe',
                delegate: '#WordList'
            },
            {
                fn: 'onAddButtonRelease',
                event: 'release',
                delegate: '#AddButton'
            },
            {
                fn: 'onEditButtonRelease',
                event: 'release',
                delegate: '#editButton'
            },
            {
                fn: 'onDeleteButtonRelease',
                event: 'release',
                delegate: '#deleteButton'
            },
            {
                fn: 'onWordListItemDoubletap',
                event: 'itemdoubletap',
                delegate: '#WordList'
            },
            {
                fn: 'onMysearchfieldChange',
                event: 'change',
                delegate: '#mysearchfield'
            }
        ]
    },

    onWordListItemSwipe: function(dataview, index, target, record, e, options) {
        c= WordApp.app.getController('MyController')
        wform = c.showEditForm(record);
        wForm.onSaveButtonRelease = c.updateRecord;


    },

    onAddButtonRelease: function(button, e, options) {
        c= WordApp.app.getController('MyController')
        wform = c.showEditForm(null);
        wForm.onSaveButtonRelease = c.addRecord;
    },

    onEditButtonRelease: function(button, e, options) {
        record = Ext.getCmp('WordList').getSelection()[0];
        c= WordApp.app.getController('MyController')
        wform = c.showEditForm(record);
        wForm.onSaveButtonRelease = c.updateRecord;

    },

    onDeleteButtonRelease: function(button, e, options) {
        s = Ext.getStore('offlineSyncStore');
        s.remove(Ext.getCmp('WordList').getSelection()[0]);
        s.sync();

    },

    onWordListItemDoubletap: function(dataview, index, target, record, e, options) {
        c= WordApp.app.getController('MyController')
        wform = c.showEditForm(record);
        wForm.onSaveButtonRelease = c.updateRecord;

    },

    onMysearchfieldChange: function(textfield, newValue, oldValue, options) {
        Ext.getCmp("QuoteList").getStore().filter("text", newValue, true);
    }

});